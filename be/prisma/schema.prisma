// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  //url      = "mongodb://admin:password@localhost/patientor?authSource=admin"
}

// ToDo: check enbeded docs
// https://github.com/prisma/prisma/issues/6708

// Patient
enum Gender {
  Male
  Female
  Other
}

model Patient {
  id                              String              @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name                            String
  dateOfBirth                     String
  ssn                             String              @unique
  gender                          Gender
  occupation                      String
  healthCheckEntries              HealthCheckEntry[]
  hospitalEntries                 HospitalEntry[]
  occupationalHealthEntries       OccupationalHealthEntry[]

  @@map("Patients")
}

// Diagnosis
model Diagnosis {
  id                              String                        @id @default(dbgenerated()) @map("_id") @db.ObjectId
  code                            String                        @unique
  name                            String
  latin                           String
  healthCheckEntryIDs             String[]                      @db.Array(ObjectId)
  healthCheckEntries              HealthCheckEntry[]            @relation(fields: [healthCheckEntryIDs])
  hospitalEntryIDs                String[]                      @db.Array(ObjectId)
  hospitalEntries                 HospitalEntry[]               @relation(fields: [hospitalEntryIDs])
  occupationalHealthEntryIDs      String[]                      @db.Array(ObjectId)
  occupationalHealthEntries       OccupationalHealthEntry[]     @relation(fields: [occupationalHealthEntryIDs])

  @@map("Diagnoses")
}

// Health check entry
enum HealthCheckRating {
  Healthy
  LowRisk
  HighRisk
  CriticalRisk
}

model HealthCheckEntry {
  id                  String              @id @default(dbgenerated()) @map("_id") @db.ObjectId
  description         String
  date                String
  specialist          String
  type                String              @default("HealthCheck")
  healthCheckRating   HealthCheckRating
  patientId           String              @db.ObjectId
  patient             Patient             @relation(fields: [patientId], references: [id])
  diagnosisIDs        String[]            @db.Array(ObjectId)
  diagnoses           Diagnosis[]         @relation(fields: [diagnosisIDs])

  @@map("HealthCheckEntries")
}

// Hospital entry
model HospitalDischarge {
  id              String          @id @default(dbgenerated()) @map("_id") @db.ObjectId
  date            String
  criteria        String
  active          Boolean         @default(false)
  hospitalEntry   HospitalEntry?

  @@map("HospitalDischarges")
}

model HospitalEntry {
  id                  String              @id @default(dbgenerated()) @map("_id") @db.ObjectId
  description         String
  date                String
  specialist          String
  type                String              @default("Hospital")
  dischargeId         String?             @db.ObjectId
  discharge           HospitalDischarge?  @relation(fields: [dischargeId], references: [id])
  patientId           String              @db.ObjectId
  patient             Patient             @relation(fields: [patientId], references: [id])
  diagnosisIDs        String[]            @db.Array(ObjectId)
  diagnoses           Diagnosis[]         @relation(fields: [diagnosisIDs])

  @@map("HospitalEntries")
}

// Occupational healthcare entry
model SickLeave {
  id                        String                      @id @default(dbgenerated()) @map("_id") @db.ObjectId
  startDate                 String
  endDate                   String
  occupationalHealthEntry   OccupationalHealthEntry?
  active                    Boolean                     @default(false)

  @@map("SickLeaves")
}

model OccupationalHealthEntry {
  id                  String          @id @default(dbgenerated()) @map("_id") @db.ObjectId
  description         String
  date                String
  specialist          String
  type                String          @default("OccupationalHealth")
  employerName        String
  sickLeaveId         String?         @db.ObjectId
  sickLeave           SickLeave?      @relation(fields: [sickLeaveId], references: [id])
  patientId           String          @db.ObjectId
  patient             Patient         @relation(fields: [patientId], references: [id])
  diagnosisIDs        String[]        @db.Array(ObjectId)
  diagnoses           Diagnosis[]     @relation(fields: [diagnosisIDs])

  @@map("OccupationalHealthEntries")
}
